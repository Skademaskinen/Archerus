{ lib, system, self, archerusPkgs, ... }:

let
    _lib = lib;
in

{ config, options, pkgs, lib, ... }:

let
    htmlFile = pkgs.writeText "index.html";
    architectureDiagram = _lib.mkArchitecture {
        ports = config.networking.firewall.allowedTCPPorts;
        vhosts = config.skade.docs.vhosts;
        format = "png";
    };
    docs = _lib.mkOptionsHtml (options.skade);
    webserver = _lib.mkWebServer rec {
        routes = {
            "/" = htmlFile ''
                <!DOCTYPE HTML>
                <html style="text-align: center">
                    <h1>NixOS Autogenerated pages</h1>
                    Despite the name of this page, it just contains some architecture things, static(ish) files that are generated by my nixos infrastructure, and autogenerated docs for my nixos options
                    I've made this autogenerated docs to help myself extend this setup years down in the future.

                    This means, that while i'm happy that other people are reading this page, it is entirely intended for only me to read.
                    ${builtins.concatStringsSep "\n" (map (page: "<a href=\"${page}\">${page}</a><br>") (builtins.attrNames routes))}
                </html>
            '';
            "/Architecture" = htmlFile ''
                <!DOCTYPE HTML>
                <html style="text-align: center">
                    <h1>Architecture</h1>
                    <img src="architecture-diagram.png">
                </html>
            '';
            "/Options" = htmlFile docs;
            "/fklub" = htmlFile ''
                <!DOCTYPE HTML>
                <html>
                    Download the new and exciting NixOS based distribution for the F-klub! (It's not really a distribution as it just installs regular NixOS flakes)
                    
                    Though it does make it very nice and easy to install a flake.
                    <h1>F-NixOS</h1>
                    <a href="F-NixOS.iso">F-NixOS ISO image</a>
                </html>
            '';
        };
        port = 8095;
        extra_files = {
            "/architecture-diagram.png" = {
                path = architectureDiagram;
                type = "image/png";
            };
            "/F-NixOS.iso" = {
                path = "${archerusPkgs.fNixos}/iso/${archerusPkgs.fNixos.isoName}";
                type = "application/x-iso9660-image";
            };
        };
    };
in

{
    options.skade.docs = {
        vhosts = lib.mkOption {
            type = lib.types.attrs;
            default = {};
            description = ''
                Attrset of data about a virtualhost
            '';
        };
    };
    config = _lib.mkWebProject config {
        name = "docs";
        exec = "${webserver}/bin/nix-webserver";
        port = 8095;
    };
}
